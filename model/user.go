// backend/model/user.go
package model

/*
===========================================
ðŸ“Œ Estrutura RegisterRequest
-------------------------------------------
- Representa o payload recebido no cadastro
  de um novo usuÃ¡rio do sistema.

Campos esperados no JSON:
- Nome  (string) â†’ Nome completo do usuÃ¡rio
- Email (string) â†’ E-mail de login (Ãºnico)
- Senha (string) â†’ Senha em texto puro
===========================================
*/
type RegisterRequest struct {
	Nome  string `json:"nome"`  // Nome do usuÃ¡rio a ser cadastrado
	Email string `json:"email"` // E-mail Ãºnico usado no login
	Senha string `json:"senha"` // Senha em texto puro no payload
}

/*
===========================================
ðŸ“Œ Estrutura User
-------------------------------------------
- Representa os dados de um usuÃ¡rio jÃ¡
  cadastrado no banco e retornado pela API.

Campos retornados no JSON:
- ID            (int)    â†’ Identificador Ãºnico
- Nome          (string) â†’ Nome do usuÃ¡rio
- Email         (string) â†’ EndereÃ§o de e-mail
- Senha         (string) â†’ Senha omitida no retorno
- FotoUrl       (string) â†’ URL da foto de perfil
- TutorialVisto (bool)   â†’ Se o tutorial jÃ¡ foi concluÃ­do
===========================================
*/
type User struct {
	ID            int    `json:"id"`              // Identificador Ãºnico no banco
	Nome          string `json:"nome"`            // Nome do usuÃ¡rio
	Email         string `json:"email"`           // E-mail de login
	Senha         string `json:"senha,omitempty"` // Senha omitida no retorno
	FotoUrl       string `json:"fotoUrl"`         // URL da foto de perfil do usuÃ¡rio
	TutorialVisto bool   `json:"tutorial_visto"`  // Flag: indica se o tutorial jÃ¡ foi visto
}
